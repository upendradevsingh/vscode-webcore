{
    "Create a dekorator": {
        "prefix": "dek",
        "body": [
            "/**",
            " * Dekorator",
            " *",
            " * Dekorator is a <strong>Pure</strong> Javascript function.",
            " * For given same input it produces the same output.",
            " * Dekorator must unware of environment it executes.",
            " * Keeping it that way enables application to execute same function",
            " * in the server (node.js) as well as in the client (browser).",
            " * <br/>",
            " *",
            " * @help",
            " * For more information on configuration, check out:",
            " * https://github.com/jabong/knucklehead#route-schema",
            " */\n",
            "const { connect } = require('@jabong/knucklehead');\n",
            "// Add other module dependencies here if any\n",
            "/**",
            " * @description",
            " * @param {any} props",
            " * @returns",
            " */",
            "const dekorator = (props) => {\n\tconst { prop, dispatch } = props;",
            "\n\t/* Dekorator code goes here */",
            "\tconst newProp = prop;",
            "\n\treturn dispatch({",
            "\t\tprop: newProp",
            "\t});\n};",
            "\nmodule.exports = connect(['prop'], dekorator);\n"
        ],
        "description": "Create a new dekorator"
    },
    "Create a route": {
        "prefix": "rtt",
        "body": [
            "/**",
            " * Http Route \n *",
            " * Your route will attach to node server and server any incoming request for the given url",
            " * If application receives a URL that doesn't match any of the defined routes,",
            " * it will be sent to discovery and if discovery resolves it an vaild response",
            " * will be generated and sent to client otherwise 404",
            " * <br/>",
            " *",
            " * @help",
            " * For more information on configuration, check out:",
            " * https://github.com/jabong/knucklehead#routes",
            " *",
            " */\n",
            "// Add module dependencies here e.g. schemas, gateway, prehandlers, dekorators",
            "const { gateway } = require('@jabong/knucklehead');",
            "\nconst { someGateway } = gateway;",
            "// const requestSchema = require('../../schema/request/<module>/<schema-file-name>');",
            "// const responseSchema = require('../../schema/response/<module>/<schema-file-name>');",
            "\n// Please add jsDocs. Use Document This extension",
            "const xRoute = {",
            "\tdomain: 'pdp', // module name e.g. pdp|catalog|home|segment|cms|account|cart|checkout|order",
            "\tidentifier: 'view', // an unique identifier for route",
            "\tmethod: 'GET',",
            "\turl: '/pathname/', // please make sure path name ends with `/`",
            "\ttemplate: 'pdp/index-v3',",
            "\tresponseType: 'html', // json or html",
            "\tschema: {",
            "\t\t// ...requestSchema,",
            "\t\t// ...responseSchema",
            "\t},",
            "\tprehandlers: [",
            "\t\t// Do not define any function directly here.",
            "\t\t// Import them from prehandlers dir and assign them here",
            "\t],",
            "\tgateway: someGateway.fetchSomething, // Must return a promise",
            "\tdekorators: [",
            "\t\t// Do not define any function directly here.",
            "\t\t// Import them from prehandlers dir and assign them here",
            "\t],",
            "};",
            "\nmodule.exports = xRoute;\n"
        ],
        "description": "Create a new route"
    },
    "Create a prehandler": {
        "prefix": "phr",
        "body": [
            "/**",
            " * Prehandler",
            " *",
            " * Prehandler is a <strong>Pure</strong> Javascript function.",
            " * For given same input it produces the same output.",
            " * Prehandler must unware of environment it executes.",
            " * Keeping it enable us to execute the same function",
            " * in the server (node.js) as well as in the client",
            " * (browser).",
            " * <br/>",
            " *",
            " * @help",
            " * For more information on configuration, check out:",
            " * https://github.com/jabong/knucklehead#route-schema",
            " */\n",
            "// Add module dependencies here if any\n",
            "/**",
            " * @description",
            " * @param {object} props",
            " * @returns",
            " */",
            "const prehandler = (props) => {",
            "\t// You must follow below pattern to retrieve properties from props",
            "\t/*",
            "\tconst { cookies, query, custom } = props;",
            "\tconst { cid } = query;",
            "\tconst { styleId } = custom;",
            "\t*/",
            "\t// Your code goes here",
            "\treturn {",
            "\t\t...props",
            "\t};",
            "};",
            "\nmodule.exports = prehandler;\n"
        ]
    }
}